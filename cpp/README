This software is free software. However, if you use this software to reduce any data used in a publication,
you must cite the paper:

A. Ritter, E. Hyde, Q. Parker, A fast and portable reimplementation of Piskunov and Valenti's optimal extraction algorithm with improved cosmic-ray removal and optimal sky subtraction, 2014, PASP 126

Before compiling any of the C++ programs you need to install the cfitsio, blitz++, and gsl libraries.

Please create symbolic link called 
/usr/local/include/c++/4 which points to the directory containing the bits directory which contains the stdc++.h file.
In case you can't find a stdc++.h file on your computer you will need to install g++ first.

If you don't have a ~/bin/ directory you will need to create one with
mkdir ~/bin
and then add this directory to your PATH variable. If you are using bash you should add the following line to your ~/.bashrc file:
export PATH=~/bin:$PATH

To install all libraries and compile all C++ programs copy and paste the following lines:
(if you get some error messages that files or symbolic links to be deleted don't exist the first time you compile it you can safely 
ignore them)

tar -zxvf cfitsio_latest.tar.gz
cd cfitsio
./configure --prefix=/usr/local
make
sudo make install
cd ..
tar -zxvf blitz-0.9.tar.gz
cd blitz-0.9
./configure --prefix=/usr/local 
make lib
sudo make install
cd ..
tar -zxvf gsl-1.16.tar.gz
cd gsl-1.16
./configure --prefix=/usr/local
make
sudo make install
cd ..
echo 'compiling all sources - this will take a while...'
./make
cd ..
ln -s stella/tempexec ~/bin/tempexec

The last step points to a nonexistent file which is needed to execute C++ programs with long parameter lists from within IRAF.

If you want the Stella DRP to create quality control plots, you will need to install the MathGL as well:
tar -zxvf mathgl-2.2.tar.gz
cd mathgl-2.2
cmake -Denable-gsl=ON
cmake -Denable-gsl=ON
make
sudo make install
If you have a MAC and encounter the error message:
Couldn't find OpenMP. You can enable POSIX threads instead.
cmake-gui .
check Advanced Options and switch OpenMP OFF and PThread ON, click on Configure and then Generate. Now you can close cmake-gui and type
make
sudo make install


After all libraries are installed, you can safely remove the tarballs:
rm cfitsio_latest.tar.gz blitz-0.9.tar.gz gsl-1.16.tar.gz

If you want to know what parameters a program has, simply start it without any parameters, and it will tell you.

Note that the C++ programs are constantly getting developed (a lot faster than the IRAF scripts encapsulating them), so there might be a few cases where the IRAF script is not yet supporting all the parameters of the executable version of the C++ program. If you find such a case please send an email to 

azuri.ritter@gmail.com

and I promise to fix that asap. Please also note that most of the parameter files in the stella/parameterfiles/ directory are not up to date. However, the IRAF script will tell you which parameters are missing, and assign standard values to the missing parameters. In this case please check the other parameter files for an example and explanation of the parameter.
At this stage the IRAF cl scripts encapsulating the C++ programs should only be seen as examples on how to implement the C++ programs in IRAF. The task stextract.cl is a good example if you want to start a compiled C++ program with a lot of parameters. Please also refer to loginuser.cl.

A kind of documentation (also outdated) for the IRAF scripts can be found at 

http://ooo.aip.de/stella/fileadmin/PublicDocuments/STELLA-pipeline/

I promise to write a proper documentation soon!!!
